version: '3.10'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: silence_spider_postgres
    environment:
      POSTGRES_DB: silence_spider
      POSTGRES_USER: spider_user
      POSTGRES_PASSWORD: spider_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - silence_spider_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: silence_spider_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - silence_spider_network

  # Elasticsearch搜索引擎
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: silence_spider_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - silence_spider_network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: silence_spider_backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://spider_user:spider_password@postgres:5432/silence_spider
      - REDIS_URL=redis://redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - DEBUG=false
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - elasticsearch
    networks:
      - silence_spider_network
    restart: unless-stopped

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: silence_spider_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - silence_spider_network
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: silence_spider_celery_worker
    command: celery -A app.tasks.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://spider_user:spider_password@postgres:5432/silence_spider
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - silence_spider_network
    restart: unless-stopped

  # Celery Beat (定时任务)
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: silence_spider_celery_beat
    command: celery -A app.tasks.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql+asyncpg://spider_user:spider_password@postgres:5432/silence_spider
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - silence_spider_network
    restart: unless-stopped

  # Flower (Celery监控)
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: silence_spider_flower
    command: celery -A app.tasks.celery_app flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - silence_spider_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  silence_spider_network:
    driver: bridge 